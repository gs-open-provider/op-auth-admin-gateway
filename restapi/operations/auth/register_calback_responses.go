// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/gs-open-provider/op-auth-admin-gateway/models"
)

// RegisterCalbackOKCode is the HTTP code returned for type RegisterCalbackOK
const RegisterCalbackOKCode int = 200

/*RegisterCalbackOK OK

swagger:response registerCalbackOK
*/
type RegisterCalbackOK struct {

	/*
	  In: Body
	*/
	Payload *models.LoginResponse `json:"body,omitempty"`
}

// NewRegisterCalbackOK creates RegisterCalbackOK with default headers values
func NewRegisterCalbackOK() *RegisterCalbackOK {

	return &RegisterCalbackOK{}
}

// WithPayload adds the payload to the register calback o k response
func (o *RegisterCalbackOK) WithPayload(payload *models.LoginResponse) *RegisterCalbackOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register calback o k response
func (o *RegisterCalbackOK) SetPayload(payload *models.LoginResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterCalbackOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterCalbackBadRequestCode is the HTTP code returned for type RegisterCalbackBadRequest
const RegisterCalbackBadRequestCode int = 400

/*RegisterCalbackBadRequest BAD REQUEST

swagger:response registerCalbackBadRequest
*/
type RegisterCalbackBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewRegisterCalbackBadRequest creates RegisterCalbackBadRequest with default headers values
func NewRegisterCalbackBadRequest() *RegisterCalbackBadRequest {

	return &RegisterCalbackBadRequest{}
}

// WithPayload adds the payload to the register calback bad request response
func (o *RegisterCalbackBadRequest) WithPayload(payload *models.GeneralResponse) *RegisterCalbackBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register calback bad request response
func (o *RegisterCalbackBadRequest) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterCalbackBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterCalbackUnauthorizedCode is the HTTP code returned for type RegisterCalbackUnauthorized
const RegisterCalbackUnauthorizedCode int = 401

/*RegisterCalbackUnauthorized UNAUTHORIZED

swagger:response registerCalbackUnauthorized
*/
type RegisterCalbackUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewRegisterCalbackUnauthorized creates RegisterCalbackUnauthorized with default headers values
func NewRegisterCalbackUnauthorized() *RegisterCalbackUnauthorized {

	return &RegisterCalbackUnauthorized{}
}

// WithPayload adds the payload to the register calback unauthorized response
func (o *RegisterCalbackUnauthorized) WithPayload(payload *models.GeneralResponse) *RegisterCalbackUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register calback unauthorized response
func (o *RegisterCalbackUnauthorized) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterCalbackUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterCalbackForbiddenCode is the HTTP code returned for type RegisterCalbackForbidden
const RegisterCalbackForbiddenCode int = 403

/*RegisterCalbackForbidden FORBIDDEN

swagger:response registerCalbackForbidden
*/
type RegisterCalbackForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewRegisterCalbackForbidden creates RegisterCalbackForbidden with default headers values
func NewRegisterCalbackForbidden() *RegisterCalbackForbidden {

	return &RegisterCalbackForbidden{}
}

// WithPayload adds the payload to the register calback forbidden response
func (o *RegisterCalbackForbidden) WithPayload(payload *models.GeneralResponse) *RegisterCalbackForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register calback forbidden response
func (o *RegisterCalbackForbidden) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterCalbackForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterCalbackNotFoundCode is the HTTP code returned for type RegisterCalbackNotFound
const RegisterCalbackNotFoundCode int = 404

/*RegisterCalbackNotFound NOT FOUND

swagger:response registerCalbackNotFound
*/
type RegisterCalbackNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewRegisterCalbackNotFound creates RegisterCalbackNotFound with default headers values
func NewRegisterCalbackNotFound() *RegisterCalbackNotFound {

	return &RegisterCalbackNotFound{}
}

// WithPayload adds the payload to the register calback not found response
func (o *RegisterCalbackNotFound) WithPayload(payload *models.GeneralResponse) *RegisterCalbackNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register calback not found response
func (o *RegisterCalbackNotFound) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterCalbackNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterCalbackInternalServerErrorCode is the HTTP code returned for type RegisterCalbackInternalServerError
const RegisterCalbackInternalServerErrorCode int = 500

/*RegisterCalbackInternalServerError INTERNAL SERVER ERROR

swagger:response registerCalbackInternalServerError
*/
type RegisterCalbackInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewRegisterCalbackInternalServerError creates RegisterCalbackInternalServerError with default headers values
func NewRegisterCalbackInternalServerError() *RegisterCalbackInternalServerError {

	return &RegisterCalbackInternalServerError{}
}

// WithPayload adds the payload to the register calback internal server error response
func (o *RegisterCalbackInternalServerError) WithPayload(payload *models.GeneralResponse) *RegisterCalbackInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register calback internal server error response
func (o *RegisterCalbackInternalServerError) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterCalbackInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
