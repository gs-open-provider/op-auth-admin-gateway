// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/gs-open-provider/op-auth-admin-gateway/models"
)

// LoginCallbackOKCode is the HTTP code returned for type LoginCallbackOK
const LoginCallbackOKCode int = 200

/*LoginCallbackOK OK

swagger:response loginCallbackOK
*/
type LoginCallbackOK struct {

	/*
	  In: Body
	*/
	Payload *models.LoginResponse `json:"body,omitempty"`
}

// NewLoginCallbackOK creates LoginCallbackOK with default headers values
func NewLoginCallbackOK() *LoginCallbackOK {

	return &LoginCallbackOK{}
}

// WithPayload adds the payload to the login callback o k response
func (o *LoginCallbackOK) WithPayload(payload *models.LoginResponse) *LoginCallbackOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login callback o k response
func (o *LoginCallbackOK) SetPayload(payload *models.LoginResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginCallbackOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LoginCallbackBadRequestCode is the HTTP code returned for type LoginCallbackBadRequest
const LoginCallbackBadRequestCode int = 400

/*LoginCallbackBadRequest BAD REQUEST

swagger:response loginCallbackBadRequest
*/
type LoginCallbackBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewLoginCallbackBadRequest creates LoginCallbackBadRequest with default headers values
func NewLoginCallbackBadRequest() *LoginCallbackBadRequest {

	return &LoginCallbackBadRequest{}
}

// WithPayload adds the payload to the login callback bad request response
func (o *LoginCallbackBadRequest) WithPayload(payload *models.GeneralResponse) *LoginCallbackBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login callback bad request response
func (o *LoginCallbackBadRequest) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginCallbackBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LoginCallbackUnauthorizedCode is the HTTP code returned for type LoginCallbackUnauthorized
const LoginCallbackUnauthorizedCode int = 401

/*LoginCallbackUnauthorized UNAUTHORIZED

swagger:response loginCallbackUnauthorized
*/
type LoginCallbackUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewLoginCallbackUnauthorized creates LoginCallbackUnauthorized with default headers values
func NewLoginCallbackUnauthorized() *LoginCallbackUnauthorized {

	return &LoginCallbackUnauthorized{}
}

// WithPayload adds the payload to the login callback unauthorized response
func (o *LoginCallbackUnauthorized) WithPayload(payload *models.GeneralResponse) *LoginCallbackUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login callback unauthorized response
func (o *LoginCallbackUnauthorized) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginCallbackUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LoginCallbackForbiddenCode is the HTTP code returned for type LoginCallbackForbidden
const LoginCallbackForbiddenCode int = 403

/*LoginCallbackForbidden FORBIDDEN

swagger:response loginCallbackForbidden
*/
type LoginCallbackForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewLoginCallbackForbidden creates LoginCallbackForbidden with default headers values
func NewLoginCallbackForbidden() *LoginCallbackForbidden {

	return &LoginCallbackForbidden{}
}

// WithPayload adds the payload to the login callback forbidden response
func (o *LoginCallbackForbidden) WithPayload(payload *models.GeneralResponse) *LoginCallbackForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login callback forbidden response
func (o *LoginCallbackForbidden) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginCallbackForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LoginCallbackNotFoundCode is the HTTP code returned for type LoginCallbackNotFound
const LoginCallbackNotFoundCode int = 404

/*LoginCallbackNotFound NOT FOUND

swagger:response loginCallbackNotFound
*/
type LoginCallbackNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewLoginCallbackNotFound creates LoginCallbackNotFound with default headers values
func NewLoginCallbackNotFound() *LoginCallbackNotFound {

	return &LoginCallbackNotFound{}
}

// WithPayload adds the payload to the login callback not found response
func (o *LoginCallbackNotFound) WithPayload(payload *models.GeneralResponse) *LoginCallbackNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login callback not found response
func (o *LoginCallbackNotFound) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginCallbackNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LoginCallbackInternalServerErrorCode is the HTTP code returned for type LoginCallbackInternalServerError
const LoginCallbackInternalServerErrorCode int = 500

/*LoginCallbackInternalServerError INTERNAL SERVER ERROR

swagger:response loginCallbackInternalServerError
*/
type LoginCallbackInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewLoginCallbackInternalServerError creates LoginCallbackInternalServerError with default headers values
func NewLoginCallbackInternalServerError() *LoginCallbackInternalServerError {

	return &LoginCallbackInternalServerError{}
}

// WithPayload adds the payload to the login callback internal server error response
func (o *LoginCallbackInternalServerError) WithPayload(payload *models.GeneralResponse) *LoginCallbackInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login callback internal server error response
func (o *LoginCallbackInternalServerError) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginCallbackInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
